{
	"info": {
		"_postman_id": "pytake-api-e2e-tests",
		"name": "PyTake API - E2E Tests",
		"description": "Complete end-to-end test suite for PyTake WhatsApp Business API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{access_token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Set base URL",
					"pm.collectionVariables.set('base_url', pm.environment.get('base_url') || 'http://localhost:8080');",
					"",
					"// Generate unique test data",
					"const timestamp = Date.now();",
					"pm.collectionVariables.set('timestamp', timestamp);",
					"pm.collectionVariables.set('test_email', `test+${timestamp}@pytake.com`);",
					"pm.collectionVariables.set('test_phone', `5511${timestamp.toString().slice(-8)}`);",
					"pm.collectionVariables.set('test_name', `Test User ${timestamp}`);"
				]
			}
		}
	],
	"item": [
		{
			"name": "1. Health Checks",
			"item": [
				{
					"name": "Health Check",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Health endpoint returns 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Health response has correct structure', function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('healthy');",
									"    pm.expect(jsonData).to.have.property('checks');",
									"    pm.expect(jsonData).to.have.property('timestamp');",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/health",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"health"
							]
						}
					}
				},
				{
					"name": "Readiness Check",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Readiness endpoint returns 200', function () {",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/health/ready",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"health",
								"ready"
							]
						}
					}
				},
				{
					"name": "Liveness Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/health/live",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"health",
								"live"
							]
						}
					}
				}
			]
		},
		{
			"name": "2. Authentication Flow",
			"item": [
				{
					"name": "User Registration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Registration returns 201', function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test('Registration response has tokens', function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('token');",
									"    pm.expect(jsonData).to.have.property('user');",
									"    ",
									"    // Store tokens for subsequent requests",
									"    pm.collectionVariables.set('access_token', jsonData.token);",
									"    pm.collectionVariables.set('user_id', jsonData.user.id);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"{{test_name}}\",\n    \"email\": \"{{test_email}}\",\n    \"password\": \"SecurePassword123!\",\n    \"company\": \"Test Company\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/auth/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"register"
							]
						}
					}
				},
				{
					"name": "User Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Login returns 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Login response has tokens', function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('token');",
									"    pm.expect(jsonData).to.have.property('user');",
									"    ",
									"    // Update access token",
									"    pm.collectionVariables.set('access_token', jsonData.token);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{test_email}}\",\n    \"password\": \"SecurePassword123!\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"login"
							]
						}
					}
				},
				{
					"name": "Get Current User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('User profile returns 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('User profile has correct data', function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.user.email).to.eql(pm.collectionVariables.get('test_email'));",
									"    pm.expect(jsonData.user.name).to.eql(pm.collectionVariables.get('test_name'));",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/auth/me",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"me"
							]
						}
					}
				}
			]
		},
		{
			"name": "3. WhatsApp Configuration",
			"item": [
				{
					"name": "Create WhatsApp Config",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Config creation returns 201', function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test('Config response has ID', function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('id');",
									"    pm.collectionVariables.set('config_id', jsonData.id);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Test WhatsApp Config\",\n    \"phone_number_id\": \"test_phone_{{timestamp}}\",\n    \"access_token\": \"test_access_token\",\n    \"webhook_verify_token\": \"test_verify_token\",\n    \"webhook_secret\": \"test_webhook_secret\",\n    \"business_account_id\": \"test_business_account\",\n    \"display_name\": \"PyTake Test\",\n    \"about\": \"Test WhatsApp Business Account\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/whatsapp-configs",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"whatsapp-configs"
							]
						}
					}
				},
				{
					"name": "List WhatsApp Configs",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Config list returns 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Config list has data', function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('data');",
									"    pm.expect(jsonData.data).to.be.an('array');",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/whatsapp-configs",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"whatsapp-configs"
							]
						}
					}
				},
				{
					"name": "Test WhatsApp Config",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Config test returns 200', function () {",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/whatsapp-configs/{{config_id}}/test",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"whatsapp-configs",
								"{{config_id}}",
								"test"
							]
						}
					}
				}
			]
		},
		{
			"name": "4. Message Management",
			"item": [
				{
					"name": "Send Text Message",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Message send returns 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Message response has ID', function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('message_id');",
									"    pm.collectionVariables.set('message_id', jsonData.message_id);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"to\": \"{{test_phone}}\",\n    \"type\": \"text\",\n    \"text\": {\n        \"body\": \"Hello from PyTake E2E Test! 🚀\"\n    }\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/whatsapp/send",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"whatsapp",
								"send"
							]
						}
					}
				},
				{
					"name": "Send Template Message",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Template message send returns 200', function () {",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"to\": \"{{test_phone}}\",\n    \"type\": \"template\",\n    \"template\": {\n        \"name\": \"hello_world\",\n        \"language\": {\n            \"code\": \"en_US\"\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/whatsapp/send",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"whatsapp",
								"send"
							]
						}
					}
				},
				{
					"name": "List Messages",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Message list returns 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Message list has data', function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('data');",
									"    pm.expect(jsonData).to.have.property('pagination');",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/messages?limit=10",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"messages"
							],
							"query": [
								{
									"key": "limit",
									"value": "10"
								}
							]
						}
					}
				}
			]
		},
		{
			"name": "5. Contact Management",
			"item": [
				{
					"name": "Create Contact",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Contact creation returns 201', function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test('Contact response has ID', function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('id');",
									"    pm.collectionVariables.set('contact_id', jsonData.id);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"E2E Test Contact\",\n    \"phone\": \"{{test_phone}}\",\n    \"email\": \"contact-{{timestamp}}@example.com\",\n    \"tags\": [\"e2e-test\", \"automated\"],\n    \"custom_fields\": {\n        \"test_field\": \"test_value\",\n        \"timestamp\": \"{{timestamp}}\"\n    }\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/contacts",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"contacts"
							]
						}
					}
				},
				{
					"name": "List Contacts",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Contact list returns 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Contact list has data', function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('data');",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/contacts",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"contacts"
							]
						}
					}
				},
				{
					"name": "Update Contact",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Contact update returns 200', function () {",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"E2E Test Contact - Updated\",\n    \"tags\": [\"e2e-test\", \"automated\", \"updated\"]\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/contacts/{{contact_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"contacts",
								"{{contact_id}}"
							]
						}
					}
				}
			]
		},
		{
			"name": "6. Conversation Management",
			"item": [
				{
					"name": "List Conversations",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Conversation list returns 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Conversation list has data', function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('data');",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/conversations",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"conversations"
							]
						}
					}
				},
				{
					"name": "Get Conversation by Phone",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Conversation by phone returns 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Conversation has messages', function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('messages');",
									"    pm.collectionVariables.set('conversation_id', jsonData.id);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/conversations/phone/{{test_phone}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"conversations",
								"phone",
								"{{test_phone}}"
							]
						}
					}
				}
			]
		},
		{
			"name": "7. WebSocket Connection",
			"item": [
				{
					"name": "WebSocket Stats",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('WebSocket stats returns 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('WebSocket stats has connection count', function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('total_connections');",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/ws/stats",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"ws",
								"stats"
							]
						}
					}
				}
			]
		},
		{
			"name": "8. Analytics & Reports",
			"item": [
				{
					"name": "Message Analytics",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Message analytics returns 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Analytics has metrics', function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('total_messages');",
									"    pm.expect(jsonData).to.have.property('sent_messages');",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/analytics/messages?period=24h",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"analytics",
								"messages"
							],
							"query": [
								{
									"key": "period",
									"value": "24h"
								}
							]
						}
					}
				}
			]
		},
		{
			"name": "9. Cleanup",
			"item": [
				{
					"name": "Delete Contact",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Contact deletion returns 204', function () {",
									"    pm.response.to.have.status(204);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/contacts/{{contact_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"contacts",
								"{{contact_id}}"
							]
						}
					}
				},
				{
					"name": "Delete WhatsApp Config",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Config deletion returns 204', function () {",
									"    pm.response.to.have.status(204);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/whatsapp-configs/{{config_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"whatsapp-configs",
								"{{config_id}}"
							]
						}
					}
				},
				{
					"name": "Logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Logout returns 200', function () {",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/auth/logout",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"logout"
							]
						}
					}
				}
			]
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8080"
		},
		{
			"key": "access_token",
			"value": ""
		},
		{
			"key": "user_id",
			"value": ""
		},
		{
			"key": "config_id",
			"value": ""
		},
		{
			"key": "contact_id",
			"value": ""
		},
		{
			"key": "conversation_id",
			"value": ""
		},
		{
			"key": "message_id",
			"value": ""
		},
		{
			"key": "timestamp",
			"value": ""
		},
		{
			"key": "test_email",
			"value": ""
		},
		{
			"key": "test_phone",
			"value": ""
		},
		{
			"key": "test_name",
			"value": ""
		}
	]
}