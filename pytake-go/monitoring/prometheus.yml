# PyTake Backend - Prometheus Configuration
# Comprehensive monitoring for WhatsApp Business API platform

global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'pytake-production'
    replica: '1'

# Alertmanager configuration (if using)
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          # - "alertmanager:9093"

# Load rules and alerts
rule_files:
  - "alerts/*.yml"
  - "rules/*.yml"

# Scrape configurations
scrape_configs:
  # Prometheus self-monitoring
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 15s
    metrics_path: '/metrics'

  # PyTake API Application
  - job_name: 'pytake-api'
    static_configs:
      - targets: ['pytake-api:9090']  # Metrics port from our middleware
    scrape_interval: 10s
    metrics_path: '/metrics'
    scrape_timeout: 10s
    honor_labels: true
    params:
      format: ['prometheus']
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: pytake-api:9090
    metric_relabel_configs:
      # Add service label
      - target_label: service
        replacement: 'pytake-api'
      # Add environment label
      - target_label: environment
        replacement: 'production'

  # PostgreSQL Database Monitoring
  - job_name: 'postgres'
    static_configs:
      - targets: ['postgres-exporter:9187']
    scrape_interval: 30s
    scrape_timeout: 10s
    relabel_configs:
      - target_label: service
        replacement: 'postgresql'

  # Redis Monitoring
  - job_name: 'redis'
    static_configs:
      - targets: ['redis-exporter:9121']
    scrape_interval: 15s
    scrape_timeout: 10s
    relabel_configs:
      - target_label: service
        replacement: 'redis'

  # Nginx Monitoring (if nginx-prometheus-exporter is used)
  - job_name: 'nginx'
    static_configs:
      - targets: ['nginx-exporter:9113']
    scrape_interval: 15s
    scrape_timeout: 10s
    relabel_configs:
      - target_label: service
        replacement: 'nginx'

  # Node/System Monitoring (if node_exporter is used)
  - job_name: 'node'
    static_configs:
      - targets: ['node-exporter:9100']
    scrape_interval: 30s
    scrape_timeout: 10s
    relabel_configs:
      - target_label: service
        replacement: 'system'

  # Docker Container Monitoring (if cAdvisor is used)
  - job_name: 'docker'
    static_configs:
      - targets: ['cadvisor:8080']
    scrape_interval: 30s
    scrape_timeout: 10s
    metrics_path: '/metrics'
    relabel_configs:
      - target_label: service
        replacement: 'docker'

  # Blackbox Monitoring - External Health Checks
  - job_name: 'blackbox-http'
    metrics_path: /probe
    params:
      module: [http_2xx]
    static_configs:
      - targets:
          - https://api.pytake.com/health
          - https://api.pytake.com/health/ready
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox-exporter:9115
      - target_label: service
        replacement: 'health-check'

  # WhatsApp API Health Monitoring (external)
  - job_name: 'whatsapp-health'
    metrics_path: /probe
    params:
      module: [http_2xx]
    static_configs:
      - targets:
          - https://graph.facebook.com/v18.0/me
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox-exporter:9115
      - target_label: service
        replacement: 'whatsapp-api'

# Storage configuration
storage:
  tsdb:
    path: /prometheus/data
    retention.time: 15d
    retention.size: 10GB
    # Compression settings for better performance
    wal-compression: true
    no-lockfile: false
    
# Remote write configuration (if using external monitoring)
# remote_write:
#   - url: "https://your-external-monitoring.com/api/v1/write"
#     basic_auth:
#       username: "prometheus"
#       password: "your-password"

# Remote read configuration
# remote_read:
#   - url: "https://your-external-monitoring.com/api/v1/read"
#     basic_auth:
#       username: "prometheus"
#       password: "your-password"