# PyTake Monitoring - Grafana and Prometheus Configuration

# Grafana Dashboard Server
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name monitoring.pytake.com grafana.pytake.com;

    # SSL Configuration
    ssl_certificate /etc/nginx/ssl/monitoring.pytake.com.crt;
    ssl_certificate_key /etc/nginx/ssl/monitoring.pytake.com.key;
    ssl_trusted_certificate /etc/nginx/ssl/chain.pem;

    # Security Headers (Admin interface)
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=(), payment=(), usb=()" always;

    # IP Whitelist for admin access (customize as needed)
    # allow 192.168.1.0/24;
    # allow 10.0.0.0/8;
    # deny all;

    # Rate limiting for admin interface
    limit_req zone=api burst=10 nodelay;
    limit_conn conn_limit_per_ip 5;

    # Grafana Proxy
    location / {
        proxy_pass http://grafana;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Grafana WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # Timeouts for interactive dashboard
        proxy_connect_timeout 10s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
        
        # Buffer settings for large dashboards
        proxy_buffering on;
        proxy_buffer_size 8k;
        proxy_buffers 32 8k;
        proxy_busy_buffers_size 16k;
    }

    # Grafana API endpoints
    location /api/ {
        limit_req zone=api burst=20 nodelay;
        
        proxy_pass http://grafana;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # API optimizations
        proxy_buffering on;
        proxy_connect_timeout 5s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }

    access_log /var/log/nginx/monitoring_access.log main;
    error_log /var/log/nginx/monitoring_error.log warn;
}

# Prometheus Metrics Server (Internal Access)
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name prometheus.pytake.com;

    # SSL Configuration
    ssl_certificate /etc/nginx/ssl/prometheus.pytake.com.crt;
    ssl_certificate_key /etc/nginx/ssl/prometheus.pytake.com.key;
    ssl_trusted_certificate /etc/nginx/ssl/chain.pem;

    # Restrict access to internal networks only
    allow 172.16.0.0/12;  # Docker networks
    allow 10.0.0.0/8;     # Internal networks
    allow 192.168.0.0/16; # Private networks
    deny all;

    # Prometheus Proxy
    location / {
        proxy_pass http://prometheus;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Prometheus optimizations
        proxy_buffering on;
        proxy_connect_timeout 5s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # Prometheus API endpoints
    location /api/ {
        proxy_pass http://prometheus;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # API optimizations for queries
        proxy_connect_timeout 5s;
        proxy_send_timeout 120s;
        proxy_read_timeout 120s;
    }

    access_log /var/log/nginx/prometheus_access.log main;
    error_log /var/log/nginx/prometheus_error.log warn;
}

# HTTP to HTTPS redirects for monitoring
server {
    listen 80;
    listen [::]:80;
    server_name monitoring.pytake.com grafana.pytake.com prometheus.pytake.com;
    
    # Let's Encrypt ACME challenge
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
    
    # Redirect all other traffic to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}