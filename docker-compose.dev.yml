version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: pytake-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: pytake
      POSTGRES_PASSWORD: pytake_dev
      POSTGRES_DB: pytake
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/01-init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U pytake"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - pytake-network

  # Redis Cache/Queue
  redis:
    image: redis:7-alpine
    container_name: pytake-redis
    restart: unless-stopped
    command: redis-server --requirepass redis_dev
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - pytake-network

  # Simple Backend API (usando simple_api)
  backend-simple:
    build:
      context: .
      dockerfile: Dockerfile.simple
    container_name: pytake-backend-simple
    restart: unless-stopped
    environment:
      DATABASE_URL: postgres://pytake:pytake_dev@postgres:5432/pytake
      REDIS_URL: redis://default:redis_dev@redis:6379
      JWT_SECRET: development_jwt_secret_change_in_production
      RUST_LOG: info,simple_api=debug
      BIND_ADDRESS: 0.0.0.0:8080
      CORS_ALLOWED_ORIGINS: http://localhost:3000,http://localhost:3001
      
      # WhatsApp Evolution API Config
      WHATSAPP_EVOLUTION_URL: http://evolution-api:8084
      WHATSAPP_EVOLUTION_API_KEY: B6D711FCDE4D4FD5936544120E713976
      WHATSAPP_INSTANCE_NAME: pytake
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - pytake-network

  # Evolution API (WhatsApp)
  evolution-api:
    image: atendai/evolution-api:v2.0.0
    container_name: pytake-evolution-api
    restart: unless-stopped
    environment:
      AUTHENTICATION_TYPE: apikey
      AUTHENTICATION_API_KEY: B6D711FCDE4D4FD5936544120E713976
      DATABASE_ENABLED: false
      DATABASE_CONNECTION_URI: mongodb://mongo:27017/evolution
      DATABASE_CONNECTION_DB_PREFIX_NAME: evolution
      RABBITMQ_ENABLED: false
      CACHE_REDIS_ENABLED: true
      CACHE_REDIS_URI: redis://default:redis_dev@redis:6379
      CACHE_REDIS_PREFIX_KEY: evolution
      WEBHOOK_GLOBAL_URL: http://backend-simple:8080/api/v1/webhooks/whatsapp
      WEBHOOK_GLOBAL_ENABLED: true
      WEBHOOK_GLOBAL_WEBHOOK_BY_EVENTS: false
      QRCODE_LIMIT: 10
      CORS_ORIGIN: "*"
      CORS_METHODS: "POST,GET,PUT,DELETE"
      LOG_LEVEL: verbose
    ports:
      - "8084:8084"
    volumes:
      - evolution_instances:/evolution/instances
      - evolution_store:/evolution/store
    depends_on:
      - redis
    networks:
      - pytake-network

  # Frontend (Development - with hot reload)
  frontend-dev:
    build:
      context: frontend
      dockerfile: Dockerfile.dev
    container_name: pytake-frontend-dev
    restart: unless-stopped
    environment:
      NODE_ENV: development
      VITE_API_URL: http://localhost:8080
      VITE_WS_URL: ws://localhost:8080
    ports:
      - "3000:3000"
    volumes:
      # Mount source for hot reload
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend-simple
    networks:
      - pytake-network
    command: npm run dev -- --host 0.0.0.0

  # pgAdmin (optional)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pytake-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@pytake.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - pytake-network
    profiles:
      - tools

  # Redis Commander (optional)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: pytake-redis-commander
    restart: unless-stopped
    environment:
      REDIS_HOSTS: local:redis:6379:0:redis_dev
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - pytake-network
    profiles:
      - tools

# Networks
networks:
  pytake-network:
    driver: bridge

# Volumes
volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  evolution_instances:
    driver: local
  evolution_store:
    driver: local
  pgadmin_data:
    driver: local