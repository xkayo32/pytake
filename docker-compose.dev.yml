version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: pytake-postgres-dev
    environment:
      POSTGRES_DB: pytake_development
      POSTGRES_USER: pytake_admin
      POSTGRES_PASSWORD: Odc7/ffNnTnG4hkbwV+Sx2ZgK61rXW2r9U2o7Rd25DU=
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U pytake_admin -d pytake_development"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - pytake-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: pytake-redis-dev
    command: redis-server --requirepass gOe7JRn+i8iWY5UAvYt3mJxBFJnAf9+jo/VZM3UN4xw=
    ports:
      - "6380:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "gOe7JRn+i8iWY5UAvYt3mJxBFJnAf9+jo/VZM3UN4xw=", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - pytake-network

  # Mock Backend API (usando json-server para desenvolvimento)
  backend-mock:
    image: node:18-alpine
    container_name: pytake-backend-mock
    working_dir: /app
    volumes:
      - ./mock-api:/app
    command: |
      sh -c "
        npm install express cors body-parser &&
        node index.js
      "
    ports:
      - "8090:8080"
    networks:
      - pytake-network
    depends_on:
      - postgres
      - redis

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: pytake-nginx-dev
    volumes:
      - ./nginx-dev.conf:/etc/nginx/nginx.conf
    ports:
      - "8089:8089"
      - "443:443"
    networks:
      - pytake-network
    depends_on:
      - backend-mock
    extra_hosts:
      - "api.pytake.local:127.0.0.1"
      - "app.pytake.local:127.0.0.1"

  # Adminer (Database Management)
  adminer:
    image: adminer:latest
    container_name: pytake-adminer
    ports:
      - "8081:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgres
      ADMINER_DESIGN: pepa-linha
    networks:
      - pytake-network
    depends_on:
      - postgres

  # Redis Commander (Redis Management)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: pytake-redis-commander
    environment:
      REDIS_HOSTS: local:redis:6379:0:gOe7JRn+i8iWY5UAvYt3mJxBFJnAf9+jo/VZM3UN4xw=
    ports:
      - "8083:8081"
    networks:
      - pytake-network
    depends_on:
      - redis

networks:
  pytake-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local