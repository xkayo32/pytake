"""Add flow automations tables

Revision ID: ab19c0306fef
Revises: 2b7d9f_add_assigned_at
Create Date: 2025-10-28 02:17:49.512802

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'ab19c0306fef'
down_revision: Union[str, None] = '2b7d9f_add_assigned_at'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('flow_automations',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('organization_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('chatbot_id', sa.UUID(), nullable=False),
    sa.Column('flow_id', sa.UUID(), nullable=False),
    sa.Column('whatsapp_number_id', sa.UUID(), nullable=False),
    sa.Column('trigger_type', sa.String(length=50), nullable=False),
    sa.Column('trigger_config', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), nullable=False),
    sa.Column('audience_type', sa.String(length=50), nullable=False),
    sa.Column('audience_config', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), nullable=False),
    sa.Column('variable_mapping', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('max_concurrent_executions', sa.Integer(), nullable=True),
    sa.Column('rate_limit_per_hour', sa.Integer(), nullable=True),
    sa.Column('retry_failed', sa.Boolean(), nullable=False),
    sa.Column('max_retries', sa.Integer(), nullable=True),
    sa.Column('execution_window_start', sa.Time(), nullable=True),
    sa.Column('execution_window_end', sa.Time(), nullable=True),
    sa.Column('execution_timezone', sa.String(length=50), nullable=True),
    sa.Column('total_executions', sa.Integer(), nullable=False),
    sa.Column('total_sent', sa.Integer(), nullable=False),
    sa.Column('total_delivered', sa.Integer(), nullable=False),
    sa.Column('total_read', sa.Integer(), nullable=False),
    sa.Column('total_replied', sa.Integer(), nullable=False),
    sa.Column('total_completed', sa.Integer(), nullable=False),
    sa.Column('total_failed', sa.Integer(), nullable=False),
    sa.Column('last_executed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('next_scheduled_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['chatbot_id'], ['chatbots.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['flow_id'], ['flows.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['whatsapp_number_id'], ['whatsapp_numbers.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_flow_automations_chatbot_id'), 'flow_automations', ['chatbot_id'], unique=False)
    op.create_index(op.f('ix_flow_automations_created_at'), 'flow_automations', ['created_at'], unique=False)
    op.create_index(op.f('ix_flow_automations_deleted_at'), 'flow_automations', ['deleted_at'], unique=False)
    op.create_index(op.f('ix_flow_automations_flow_id'), 'flow_automations', ['flow_id'], unique=False)
    op.create_index(op.f('ix_flow_automations_organization_id'), 'flow_automations', ['organization_id'], unique=False)
    op.create_index(op.f('ix_flow_automations_whatsapp_number_id'), 'flow_automations', ['whatsapp_number_id'], unique=False)
    op.create_table('flow_automation_executions',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('automation_id', sa.UUID(), nullable=False),
    sa.Column('organization_id', sa.UUID(), nullable=False),
    sa.Column('execution_type', sa.String(length=50), nullable=False),
    sa.Column('triggered_by_user_id', sa.UUID(), nullable=True),
    sa.Column('triggered_by_event', sa.String(length=255), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('total_recipients', sa.Integer(), nullable=False),
    sa.Column('messages_sent', sa.Integer(), nullable=False),
    sa.Column('messages_delivered', sa.Integer(), nullable=False),
    sa.Column('messages_read', sa.Integer(), nullable=False),
    sa.Column('messages_replied', sa.Integer(), nullable=False),
    sa.Column('messages_completed', sa.Integer(), nullable=False),
    sa.Column('messages_failed', sa.Integer(), nullable=False),
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('paused_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('cancelled_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('errors', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'[]'::jsonb"), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['automation_id'], ['flow_automations.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['triggered_by_user_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_flow_automation_executions_automation_id'), 'flow_automation_executions', ['automation_id'], unique=False)
    op.create_index(op.f('ix_flow_automation_executions_created_at'), 'flow_automation_executions', ['created_at'], unique=False)
    op.create_index(op.f('ix_flow_automation_executions_organization_id'), 'flow_automation_executions', ['organization_id'], unique=False)
    op.create_table('flow_automation_recipients',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('execution_id', sa.UUID(), nullable=False),
    sa.Column('organization_id', sa.UUID(), nullable=False),
    sa.Column('contact_id', sa.UUID(), nullable=False),
    sa.Column('phone_number', sa.String(length=20), nullable=False),
    sa.Column('variables', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('conversation_id', sa.UUID(), nullable=True),
    sa.Column('attempts', sa.Integer(), nullable=False),
    sa.Column('last_attempt_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('flow_completed', sa.Boolean(), nullable=False),
    sa.Column('flow_current_node', sa.String(length=255), nullable=True),
    sa.Column('flow_outcome', sa.String(length=100), nullable=True),
    sa.Column('sent_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('delivered_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('read_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('replied_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['contact_id'], ['contacts.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['conversation_id'], ['conversations.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['execution_id'], ['flow_automation_executions.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_flow_automation_recipients_contact_id'), 'flow_automation_recipients', ['contact_id'], unique=False)
    op.create_index(op.f('ix_flow_automation_recipients_conversation_id'), 'flow_automation_recipients', ['conversation_id'], unique=False)
    op.create_index(op.f('ix_flow_automation_recipients_created_at'), 'flow_automation_recipients', ['created_at'], unique=False)
    op.create_index(op.f('ix_flow_automation_recipients_execution_id'), 'flow_automation_recipients', ['execution_id'], unique=False)
    op.create_index(op.f('ix_flow_automation_recipients_organization_id'), 'flow_automation_recipients', ['organization_id'], unique=False)
    op.drop_index('ix_secrets_chatbot_id', table_name='secrets')
    op.drop_index('ix_secrets_encryption_provider', table_name='secrets')
    op.drop_index('ix_secrets_is_active', table_name='secrets')
    op.drop_index('ix_secrets_name', table_name='secrets')
    op.drop_index('ix_secrets_organization_id', table_name='secrets')
    op.drop_table('secrets')
    op.drop_index('ix_agent_skills_org_id', table_name='agent_skills')
    op.drop_index('ix_agent_skills_skill_name', table_name='agent_skills')
    op.drop_index('ix_agent_skills_user_id', table_name='agent_skills')
    op.drop_table('agent_skills')
    op.alter_column('ai_custom_models', 'supports_vision',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_nullable=False)
    op.alter_column('ai_custom_models', 'supports_tools',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_nullable=False)
    op.alter_column('ai_custom_models', 'is_active',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_nullable=False)
    op.alter_column('ai_custom_models', 'usage_count',
               existing_type=sa.INTEGER(),
               server_default=None,
               existing_nullable=False)
    op.alter_column('ai_custom_models', 'total_input_tokens',
               existing_type=sa.BIGINT(),
               server_default=None,
               existing_nullable=False)
    op.alter_column('ai_custom_models', 'total_output_tokens',
               existing_type=sa.BIGINT(),
               server_default=None,
               existing_nullable=False)
    op.alter_column('ai_custom_models', 'total_cost',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               server_default=None,
               existing_nullable=False)
    op.drop_constraint('uq_ai_custom_models_org_model', 'ai_custom_models', type_='unique')
    op.create_index(op.f('ix_ai_custom_models_created_at'), 'ai_custom_models', ['created_at'], unique=False)
    op.drop_column('ai_custom_models', 'deleted_at')
    op.alter_column('campaigns', 'errors',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               comment='Array of retry attempt details',
               existing_nullable=False,
               existing_server_default=sa.text("'[]'::jsonb"))
    op.alter_column('campaigns', 'message_statuses',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               comment='Status tracking per contact',
               existing_nullable=False,
               existing_server_default=sa.text("'{}'::jsonb"))
    op.alter_column('campaigns', 'retry_max_attempts',
               existing_type=sa.INTEGER(),
               comment='Maximum retry attempts per failed message',
               existing_nullable=False,
               existing_server_default=sa.text('3'))
    op.alter_column('campaigns', 'retry_base_delay',
               existing_type=sa.INTEGER(),
               comment='Base delay in seconds for exponential backoff',
               existing_nullable=False,
               existing_server_default=sa.text('60'))
    op.alter_column('campaigns', 'retry_max_delay',
               existing_type=sa.INTEGER(),
               comment='Maximum delay in seconds for exponential backoff',
               existing_nullable=False,
               existing_server_default=sa.text('3600'))
    op.create_index(op.f('ix_queues_created_at'), 'queues', ['created_at'], unique=False)
    op.create_index(op.f('ix_queues_deleted_at'), 'queues', ['deleted_at'], unique=False)
    op.drop_constraint('whatsapp_numbers_phone_number_id_key', 'whatsapp_numbers', type_='unique')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint('whatsapp_numbers_phone_number_id_key', 'whatsapp_numbers', ['phone_number_id'])
    op.drop_index(op.f('ix_queues_deleted_at'), table_name='queues')
    op.drop_index(op.f('ix_queues_created_at'), table_name='queues')
    op.alter_column('campaigns', 'retry_max_delay',
               existing_type=sa.INTEGER(),
               comment=None,
               existing_comment='Maximum delay in seconds for exponential backoff',
               existing_nullable=False,
               existing_server_default=sa.text('3600'))
    op.alter_column('campaigns', 'retry_base_delay',
               existing_type=sa.INTEGER(),
               comment=None,
               existing_comment='Base delay in seconds for exponential backoff',
               existing_nullable=False,
               existing_server_default=sa.text('60'))
    op.alter_column('campaigns', 'retry_max_attempts',
               existing_type=sa.INTEGER(),
               comment=None,
               existing_comment='Maximum retry attempts per failed message',
               existing_nullable=False,
               existing_server_default=sa.text('3'))
    op.alter_column('campaigns', 'message_statuses',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               comment=None,
               existing_comment='Status tracking per contact',
               existing_nullable=False,
               existing_server_default=sa.text("'{}'::jsonb"))
    op.alter_column('campaigns', 'errors',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               comment=None,
               existing_comment='Array of retry attempt details',
               existing_nullable=False,
               existing_server_default=sa.text("'[]'::jsonb"))
    op.add_column('ai_custom_models', sa.Column('deleted_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_ai_custom_models_created_at'), table_name='ai_custom_models')
    op.create_unique_constraint('uq_ai_custom_models_org_model', 'ai_custom_models', ['organization_id', 'model_id'])
    op.alter_column('ai_custom_models', 'total_cost',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               server_default=sa.text("'0'::double precision"),
               existing_nullable=False)
    op.alter_column('ai_custom_models', 'total_output_tokens',
               existing_type=sa.BIGINT(),
               server_default=sa.text("'0'::bigint"),
               existing_nullable=False)
    op.alter_column('ai_custom_models', 'total_input_tokens',
               existing_type=sa.BIGINT(),
               server_default=sa.text("'0'::bigint"),
               existing_nullable=False)
    op.alter_column('ai_custom_models', 'usage_count',
               existing_type=sa.INTEGER(),
               server_default=sa.text('0'),
               existing_nullable=False)
    op.alter_column('ai_custom_models', 'is_active',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('true'),
               existing_nullable=False)
    op.alter_column('ai_custom_models', 'supports_tools',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('true'),
               existing_nullable=False)
    op.alter_column('ai_custom_models', 'supports_vision',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('false'),
               existing_nullable=False)
    op.create_table('agent_skills',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('organization_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('skill_name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('proficiency_level', sa.INTEGER(), server_default=sa.text('3'), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('deleted_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], name='agent_skills_organization_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='agent_skills_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='agent_skills_pkey')
    )
    op.create_index('ix_agent_skills_user_id', 'agent_skills', ['user_id'], unique=False)
    op.create_index('ix_agent_skills_skill_name', 'agent_skills', ['skill_name'], unique=False)
    op.create_index('ix_agent_skills_org_id', 'agent_skills', ['organization_id'], unique=False)
    op.create_table('secrets',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('organization_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('chatbot_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('display_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('encrypted_value', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('encryption_provider', postgresql.ENUM('fernet', 'aws_kms', 'vault', name='encryptionprovider'), server_default=sa.text("'fernet'::encryptionprovider"), autoincrement=False, nullable=False),
    sa.Column('encryption_key_id', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('encryption_metadata', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('scope', postgresql.ENUM('organization', 'chatbot', name='secretscope'), server_default=sa.text("'chatbot'::secretscope"), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=False),
    sa.Column('metadata', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('last_used_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('usage_count', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['chatbot_id'], ['chatbots.id'], name='secrets_chatbot_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], name='secrets_organization_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='secrets_pkey'),
    sa.UniqueConstraint('organization_id', 'chatbot_id', 'name', name='uq_secrets_org_chatbot_name')
    )
    op.create_index('ix_secrets_organization_id', 'secrets', ['organization_id'], unique=False)
    op.create_index('ix_secrets_name', 'secrets', ['name'], unique=False)
    op.create_index('ix_secrets_is_active', 'secrets', ['is_active'], unique=False)
    op.create_index('ix_secrets_encryption_provider', 'secrets', ['encryption_provider'], unique=False)
    op.create_index('ix_secrets_chatbot_id', 'secrets', ['chatbot_id'], unique=False)
    op.drop_index(op.f('ix_flow_automation_recipients_organization_id'), table_name='flow_automation_recipients')
    op.drop_index(op.f('ix_flow_automation_recipients_execution_id'), table_name='flow_automation_recipients')
    op.drop_index(op.f('ix_flow_automation_recipients_created_at'), table_name='flow_automation_recipients')
    op.drop_index(op.f('ix_flow_automation_recipients_conversation_id'), table_name='flow_automation_recipients')
    op.drop_index(op.f('ix_flow_automation_recipients_contact_id'), table_name='flow_automation_recipients')
    op.drop_table('flow_automation_recipients')
    op.drop_index(op.f('ix_flow_automation_executions_organization_id'), table_name='flow_automation_executions')
    op.drop_index(op.f('ix_flow_automation_executions_created_at'), table_name='flow_automation_executions')
    op.drop_index(op.f('ix_flow_automation_executions_automation_id'), table_name='flow_automation_executions')
    op.drop_table('flow_automation_executions')
    op.drop_index(op.f('ix_flow_automations_whatsapp_number_id'), table_name='flow_automations')
    op.drop_index(op.f('ix_flow_automations_organization_id'), table_name='flow_automations')
    op.drop_index(op.f('ix_flow_automations_flow_id'), table_name='flow_automations')
    op.drop_index(op.f('ix_flow_automations_deleted_at'), table_name='flow_automations')
    op.drop_index(op.f('ix_flow_automations_created_at'), table_name='flow_automations')
    op.drop_index(op.f('ix_flow_automations_chatbot_id'), table_name='flow_automations')
    op.drop_table('flow_automations')
    # ### end Alembic commands ###
