version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: pytake-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-pytake}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-pytake_dev}
      POSTGRES_DB: ${POSTGRES_DB:-pytake}
      POSTGRES_INITDB_ARGS: "-E UTF8"
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/01-init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U pytake"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - pytake-network

  # Redis Cache/Queue
  redis:
    image: redis:7-alpine
    container_name: pytake-redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD:-redis_dev}
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - pytake-network

  # Backend API (Development - with hot reload)
  backend:
    build:
      context: .
      dockerfile: docker/backend.Dockerfile
      target: builder
    container_name: pytake-backend
    restart: unless-stopped
    environment:
      # App configuration
      APP_ENV: ${APP_ENV:-development}
      APP_PORT: ${APP_PORT:-8080}
      RUST_LOG: ${RUST_LOG:-info,pytake=debug}
      RUST_BACKTRACE: 1
      
      # Database
      DATABASE_URL: postgres://${POSTGRES_USER:-pytake}:${POSTGRES_PASSWORD:-pytake_dev}@postgres:5432/${POSTGRES_DB:-pytake}
      
      # Redis
      REDIS_URL: redis://default:${REDIS_PASSWORD:-redis_dev}@redis:6379
      
      # JWT
      JWT_SECRET: ${JWT_SECRET:-development_jwt_secret_change_in_production}
      
      # WhatsApp (optional for development)
      WHATSAPP_PHONE_NUMBER_ID: ${WHATSAPP_PHONE_NUMBER_ID:-}
      WHATSAPP_ACCESS_TOKEN: ${WHATSAPP_ACCESS_TOKEN:-}
      WHATSAPP_WEBHOOK_VERIFY_TOKEN: ${WHATSAPP_WEBHOOK_VERIFY_TOKEN:-development_webhook_token}
    ports:
      - "${APP_PORT:-8080}:8080"
    volumes:
      # Mount source for hot reload in development
      - ./backend:/app
      - backend_target:/app/target
      - backend_cargo:/usr/local/cargo
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - pytake-network
    # Development command with hot reload
    command: cargo watch -x "run --bin pytake-api"

  # Frontend (Development - with hot reload)
  frontend:
    build:
      context: .
      dockerfile: docker/frontend.Dockerfile
      target: builder
    container_name: pytake-frontend
    restart: unless-stopped
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      VITE_API_URL: ${VITE_API_URL:-http://localhost:8080}
      VITE_WS_URL: ${VITE_WS_URL:-ws://localhost:8080}
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    volumes:
      # Mount source for hot reload in development
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
    depends_on:
      - backend
    networks:
      - pytake-network
    # Development command with hot reload
    command: npm run dev -- --host 0.0.0.0

  # pgAdmin (optional - for database management)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pytake-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@pytake.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - pytake-network
    profiles:
      - tools

  # Redis Commander (optional - for Redis management)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: pytake-redis-commander
    restart: unless-stopped
    environment:
      REDIS_HOSTS: local:redis:6379:0:${REDIS_PASSWORD:-redis_dev}
    ports:
      - "${REDIS_COMMANDER_PORT:-8081}:8081"
    depends_on:
      - redis
    networks:
      - pytake-network
    profiles:
      - tools

# Networks
networks:
  pytake-network:
    driver: bridge

# Volumes
volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  backend_target:
    driver: local
  backend_cargo:
    driver: local
  frontend_node_modules:
    driver: local
  pgadmin_data:
    driver: local